{
  "openapi": "3.0.3",
  "info": {
    "title": "Dify Tool Cloudflare Worker API",
    "version": "1.0.0",
    "description": "This is the documentation for Dify Tool Cloudflare Worker API to d1 database to store chat history and reservations"
  },
  "servers": [
    {
      "url": "https://dify-tool.atk721.workers.dev"
    }
  ],
  "components": {
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/customers": {
      "post": {
        "operationId": "post_CustomerCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created Object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "phone",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7001
                          },
                          "message": {
                            "type": "string",
                            "example": "Input Validation Error"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get_CustomerList",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "required": false,
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "email",
                          "phone",
                          "created_at",
                          "updated_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "operationId": "get_CustomerRead",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single object if found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "phone",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7002
                          },
                          "message": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_CustomerUpdate",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated Object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "phone",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7001
                          },
                          "message": {
                            "type": "string",
                            "example": "Input Validation Error"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7002
                          },
                          "message": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_CustomerDelete",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Object if it was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "phone",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7002
                          },
                          "message": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "operationId": "post_ChatHistoryCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  },
                  "user_name": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "response": {
                    "type": "string"
                  }
                },
                "required": [
                  "customer_id",
                  "user_name",
                  "message",
                  "response"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created Object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "user_name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "response": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "customer_id",
                        "user_name",
                        "message",
                        "response",
                        "created_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7001
                          },
                          "message": {
                            "type": "string",
                            "example": "Input Validation Error"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get_ChatHistoryList",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "required": false,
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "customer_id": {
                            "type": "integer"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "response": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "customer_id",
                          "user_name",
                          "message",
                          "response",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/chat/customer/{customerId}": {
      "get": {
        "tags": [
          "Chat History"
        ],
        "summary": "Get chat history by customer ID",
        "operationId": "get_ChatHistoryByCustomer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat history for the customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "customer_id": {
                            "type": "integer"
                          },
                          "user_name": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "response": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "customer_id",
                          "user_name",
                          "message",
                          "response",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/reservations": {
      "post": {
        "operationId": "post_ReservationCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  },
                  "customer_name": {
                    "type": "string"
                  },
                  "service_name": {
                    "type": "string"
                  },
                  "reservation_date": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "customer_id",
                  "customer_name",
                  "service_name",
                  "reservation_date",
                  "status",
                  "notes"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created Object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "customer_name": {
                          "type": "string"
                        },
                        "service_name": {
                          "type": "string"
                        },
                        "reservation_date": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "customer_id",
                        "customer_name",
                        "service_name",
                        "reservation_date",
                        "status",
                        "notes",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7001
                          },
                          "message": {
                            "type": "string",
                            "example": "Input Validation Error"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get_ReservationList",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "required": false,
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "customer_id": {
                            "type": "integer"
                          },
                          "customer_name": {
                            "type": "string"
                          },
                          "service_name": {
                            "type": "string"
                          },
                          "reservation_date": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "customer_id",
                          "customer_name",
                          "service_name",
                          "reservation_date",
                          "status",
                          "notes",
                          "created_at",
                          "updated_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/reservations/customer/{customerId}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get reservations by customer ID",
        "operationId": "get_ReservationsByCustomer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Reservations for the customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "customer_id": {
                            "type": "integer"
                          },
                          "customer_name": {
                            "type": "string"
                          },
                          "service_name": {
                            "type": "string"
                          },
                          "reservation_date": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "customer_id",
                          "customer_name",
                          "service_name",
                          "reservation_date",
                          "status",
                          "notes",
                          "created_at",
                          "updated_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No reservations found for this customer"
          }
        }
      }
    },
    "/reservations/{id}": {
      "put": {
        "operationId": "put_ReservationUpdate",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  },
                  "customer_name": {
                    "type": "string"
                  },
                  "service_name": {
                    "type": "string"
                  },
                  "reservation_date": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "customer_id",
                  "customer_name",
                  "service_name",
                  "reservation_date",
                  "status",
                  "notes"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated Object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "customer_id": {
                          "type": "integer"
                        },
                        "customer_name": {
                          "type": "string"
                        },
                        "service_name": {
                          "type": "string"
                        },
                        "reservation_date": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "customer_id",
                        "customer_name",
                        "service_name",
                        "reservation_date",
                        "status",
                        "notes",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7001
                          },
                          "message": {
                            "type": "string",
                            "example": "Input Validation Error"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "number",
                            "example": 7002
                          },
                          "message": {
                            "type": "string",
                            "example": "Not Found"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
